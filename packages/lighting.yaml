homeassistant:
#   customize:


#     automation.midmorning:
#       friendly_name: Midmorning
#       hasska_hidden: true
#     automation.midday_sunny:
#       friendly_name: Midday Sunny
#       hasska_hidden: true
#     # automation.midday_partlycloudy_overcast:
#     #   friendly_name: Midday Cloudy
#     #   hasska_hidden: true
#     # automation.thunderstorms:
#     #   friendly_name: Thunderstorms
#     #   hasska_hidden: true

#     automation.leds_off:
#       friendly_name: Lights Off
#       hasska_hidden: true
    # automation.moon_lights_off_step_5:
    #   friendly_name: Fade Moon Lights
    #   hasska_hidden: true
    # automation.weather_change_thunderstorms:
    #   friendly_name: Thunderstorms Off
    #   hasska_hidden: true
    # automation.weather_change_cloudy:
    #   friendly_name: Cloudy Off
    #   hasska_hidden: true
    # automation.rain:
    #   friendly_name: Rain
    #   hasska_hidden: true
    # automation.weather_change_rain:
    #   friendly_name: Rain Off
    #   hasska_hidden: true


group:
  lighting_card:
   control: hidden
   name: Fish Tank Leds
   entities:
#      - script.led_white_fish_tank
#      - script.led_off
#      - script.led_blue
#      - script.led_daylight
#      - script.led_sunrise
#      - script.led_midmorning
#      - script.led_sunset
     - sensor.small_tank_lights_mode
     - sensor.small_tank_lights_weather

  lighting_automations_card:
    control: hidden
    name: Fish Tank Leds Automations
    entities:
      - automation.moon_lights
      - automation.midnight_blue
      - automation.sunrise
      - automation.morning_evening
      - automation.midday
      # - automation.midday_partlycloudy_overcast
      # - automation.weather_change_cloudy
      # - automation.thunderstorms
      # - automation.weather_change_thunderstorms
      - automation.sunset
      # - automation.sunset_white_step_2
#      - automation.moon_lights_sunset

      - automation.leds_off
      # - automation.moon_lights_off_step_5
      # - automation.rain
      # - automation.weather_change_rain

# automation:

  ############# Sunset    ########################################
  # - alias: "Sunset Leds Step 1"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #       offset: "-02:00:00"
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.boolean_midday_cloudy
  #       state: 'off'
  #   action:
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: group.input_boolean_card
  #     - service: input_boolean.turn_on
  #       data:
  #         entity_id: input_boolean.boolean_afternoon
  #     - service: script.turn_on
  #       entity_id: script.led_blue

  #
  # - alias: "dark"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #       offset: "00:30:00"
  #   action:
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: group.input_boolean_card
  #     - service: input_boolean.turn_on
  #       data:
  #         entity_id: input_boolean.boolean_sunset
  #     - service: script.turn_on
  #       entity_id: script.led_off
  #     - delay: '00:00:05'
  #     - service: script.turn_on
  #       entity_id: script.led_blue
  #
  # - alias: "leds_off"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #       offset: "02:00:00"
  #   action:
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: group.input_boolean_card
  #     - service: input_boolean.turn_on
  #       data:
  #         entity_id: input_boolean.boolean_moon_fade
  #     - delay: '00:00:05'
  #     - service: script.turn_on
  #       entity_id: script.led_off
  # - alias: "Moon Lights Off Step 5"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: sun
  #       event: sunset
  #       offset: "02:31:00"
  #   action:
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: group.input_boolean_card
  #     - service: input_boolean.turn_on
  #       data:
  #         entity_id: input_boolean.boolean_moon_lights_off
######### Weather Effects     #######################

  # - alias: "midday_partlycloudy_overcast"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       to: 'Partly Cloudy'
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       to: 'Overcast'
  #   condition:
  #     condition: or
  #     conditions:
  #       - condition: state
  #         entity_id: input_boolean.boolean_midday_sunny
  #         state: 'on'
  #       - condition: state
  #         entity_id: input_boolean.boolean_afternoon
  #         state: 'on'
  #       - condition: state
  #         entity_id: input_boolean.boolean_evening
  #         state: 'on'
  #   action:
  #     - service: input_boolean.turn_on
  #       data:
  #         entity_id: input_boolean.boolean_midday_cloudy
  #
  # - alias: "Thunderstorms"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       to: 'Thunderstorms'
  #   action:
  #     - service: input_boolean.turn_on
  #       data:
  #         entity_id: input_boolean.boolean_thunderstorm
  #
  # - alias: "Rain"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       to: 'Rain'
  #   action:
  #     - service: input_boolean.turn_on
  #       data:
  #         entity_id: input_boolean.boolean_rain
  #
  # - alias: "Weather Change Thunderstorms"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       from: 'Thunderstorms'
  #   action:
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: input_boolean.boolean_thunderstorm
  #     - service: automation.trigger
  #       data_template:
  #         entity_id: >
  #                      {% if states('input_boolean.boolean_morning_moon') == 'on' %}
  #                         automation.moon_lights_full_moon_sunrise
  #                      {% elif states('input_boolean.boolean_sunrise') == 'on' %}
  #                         automation.sunrise
  #                      {% elif states('input_boolean.boolean_midday_sunny') == 'on' %}
  #                         automation.midday_sunny
  #                      {% elif states('input_boolean.boolean_afternoon') == 'on' %}
  #                         automation.sunset_leds_step_1
  #                      {% elif states('input_boolean.boolean_evening') == 'on' %}
  #                         automation.sunset_white_step_2
  #                      {% elif states('input_boolean.boolean_sunset') == 'on' %}
  #                         automation.moon_lights_full_moon_sunset_step_3
  #                      {% elif states('input_boolean.boolean_moon_lights_off') == 'on' %}
  #                         automation.moon_lights_off_step_4
  #                      {% else %}
  #                         automation.midday_sunny
  #                      {% endif %}
  #
  # - alias: "Weather Change Cloudy"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       from: 'Overcast'
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       from: 'Partly Cloudy'
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       from: 'Mostly Cloudy'
  #   condition:
  #     condition: or
  #     conditions:
  #       - condition: state
  #         entity_id: input_boolean.boolean_midday_sunny
  #         state: 'on'
  #       - condition: state
  #         entity_id: input_boolean.boolean_afternoon
  #         state: 'on'
  #       - condition: state
  #         entity_id: input_boolean.boolean_evening
  #         state: 'on'
  #   action:
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: input_boolean.boolean_midday_cloudy
  #     - service: automation.trigger
  #       data_template:
  #         entity_id: >
  #                      {% if states('input_boolean.boolean_midday_sunny') == 'on' %}
  #                          automation.midday_sunny
  #                      {% elif states('input_boolean.boolean_afternoon') == 'on' %}
  #                          automation.sunset_leds_step_1
  #                      {% elif states('input_boolean.boolean_evening') == 'on' %}
  #                          automation.sunset_white_step_2
  #                      {% else %}
  #                         #  None
  #                      {% endif %}
  #
  # - alias: "Weather Change Rain"
  #   initial_state: true
  #   hide_entity: false
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.fish_tank_weather_current
  #       from: 'Rain'
  #   action:
  #     - service: input_boolean.turn_off
  #       data:
  #         entity_id: input_boolean.boolean_rain
  #     - service: automation.trigger
  #       data_template:
  #         entity_id: >
  #                      {% if states('input_boolean.boolean_morning_moon') == 'on' %}
  #                         automation.moon_lights_full_moon_sunrise
  #                      {% elif states('input_boolean.boolean_sunrise') == 'on' %}
  #                         automation.sunrise
  #                      {% elif states('input_boolean.boolean_midday_sunny') == 'on' %}
  #                         automation.midday_sunny
  #                      {% elif states('input_boolean.boolean_afternoon') == 'on' %}
  #                         automation.sunset_leds_step_1
  #                      {% elif states('input_boolean.boolean_evening') == 'on' %}
  #                         automation.sunset_white_step_2
  #                      {% elif states('input_boolean.boolean_sunset') == 'on' %}
  #                         automation.moon_lights_full_moon_sunset_step_3
  #                      {% elif states('input_boolean.boolean_moon_lights_off') == 'on' %}
  #                         automation.moon_lights_off_step_4
  #                      {% else %}
  #                         automation.midday_sunny
  #                      {% endif %}

# script:
#   led_white_fish_tank:
#     sequence:
#       - delay: '00:00:01'
#       - service: shell_command.white_on
#   led_blue:
#     sequence:
#       - delay: '00:00:01'
#       - service: shell_command.blue
#   led_daylight:
#     sequence:
#       - delay: '00:00:01'
#       - service: shell_command.daylight
#   led_off:
#     sequence:
#       - delay: '00:00:01'
#       - service: shell_command.all_off
#   led_sunrise:
#     sequence:
#       - delay: '00:00:01'
#       - service: shell_command.sunrise
#   led_midmorning:
#     sequence:
#       - delay: '00:00:01'
#       - service: shell_command.midmorning
#   led_sunset:
#     sequence:
#       - delay: '00:00:01'
#       - service: shell_command.sunset
#   # led_moonlight:
#   #   sequence:
#   #     - delay: '00:00:01'
#   #     - service: shell_command.moonlight
#
# shell_command:
#   white_on: 'echo -e  -n "w" > /dev/ttyACM0






